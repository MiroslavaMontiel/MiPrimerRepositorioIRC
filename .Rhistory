library(dplyr)
library(tidyverse)
library(plotly)
library(ggplot2)
library(gganimate)
library(gifski)
library(RColorBrewer)
library(gapminder)
library(xlsx)
library(data.table)
library(readxl)
library(readr)
library(trelliscopejs)
library(forecast)
####Importar base de datos csv
library(readr)
file.choose()#buscar ruta del archivo csv
ruta_csv <-"C:\\Users\\Miroslava\\Documents\\GitHub\\MiPrimerRepositorioIRC\\servicios_integrales_2019-2021.csv"
read_csv(ruta_csv)
servicios_integrales_2019_2021<-read_csv(ruta_csv)
servicios_integrales_2019_2021 %>%
filter(estado_usuaria=="CIUDAD DE MÉXICO") %>%
group_by(fecha_alta, municipio_usuaria) %>%
count(municipio_usuaria, sort = TRUE) %>%
summarise(m=n)%>%
ggplot(aes(fecha_alta, m,))+
geom_point(size = 0.3) +
geom_smooth(se=FALSE, span=1) +
labs(title="No. de llamadas realizadas a Línea Mujeres agrupadas por Alcaldía \r\n 2019-2021
",
x="\r\nFecha de llamada",
y= "\r\nNúmero de llamdas recibidas por día")+
facet_trelliscope(
~municipio_usuaria,
ncol = 2,
nrow = 2,
as_plotly = TRUE)
servicios_integrales_2019_2021 %>%
filter(estado_usuaria=="CIUDAD DE MÉXICO") %>%
group_by(fecha_alta, municipio_usuaria) %>%
count(municipio_usuaria, sort = TRUE) %>%
summarise(m=n)%>%
ggplot(aes(fecha_alta, m,))+
geom_point(size = 0.3) +
geom_smooth(se=FALSE, span=1) +
labs(title="No. de llamadas realizadas a Línea Mujeres agrupadas por Alcaldía \r\n 2019-2021
",
x="\r\nFecha de llamada",
y= "\r\nNúmero de llamdas recibidas por día")+
facet_trelliscope(
~municipio_usuaria,
ncol = 2,
nrow = 2,
as_plotly = TRUE)
#####Cargar librerías
library(dplyr)
library(tidyverse)
library(plotly)
library(ggplot2)
library(gganimate)
library(gifski)
library(RColorBrewer)
library(gapminder)
library(xlsx)
library(data.table)
library(readxl)
library(readr)
library(trelliscopejs)
library(forecast)
library(fpp2)
library(lubridate)
library(DecomposeR)
llamadas_dia_gam<-servicios_integrales_2019_2021 %>%
filter(estado_usuaria=="CIUDAD DE MÉXICO", municipio_usuaria=="GUSTAVO A. MADERO") %>%
group_by(fecha_alta, municipio_usuaria) %>%
count(municipio_usuaria, sort = TRUE) %>%
mutate(llamadasGAM=n)
llamadas_dia_gam
llamadas_mes_gam<-llamadas_dia_gam %>%
mutate(mes=format(fecha_alta, "%m"),año=format(fecha_alta, "%Y"))%>%
group_by(mes, año) %>%
summarise(llamadas= sum(n) )
llamadas_mes_gam
############## SERIE TEMPORAL
Y<-ts(llamadas_mes_gam$llamadas, start=c(2019,1),end = c(2021,12), frequency = 12)
Y
############## EXPLORACIÓN DE LOS DATOS
autoplot(Y)+
labs(title="No. de llamadas realizadas a Línea Mujeres agrupadas por Alcaldía \r\n 2019-2021
",
x="\r\nFecha de llamada",
y= "\r\nNúmero de llamdas recibidas por mes")
descom= decompose(Y)
autoplot(descom)
acf(Y)
pacf(Y)
############# Elaboración de modelo ARIMA
modelo_arima <- auto.arima(Y,d=1, D=1, stepwise= FALSE, approximation=FALSE, trace= TRUE)
print(modelo_arima) #Modelo que más se ajusta a los datos, revisó 61 combinaciones para ver cuál se ajustaba más a los datos
####### Se calcula el forecast de llamadas para próximos 6 meses
fcst <- forecast(modelo_arima, h=12, level= c(95))
autoplot(fcst)+
labs(title="No. de llamadas pronosticadas a Línea Mujeres en la Alcaldía GAM \r\n para los próximos doce meses
",
x="\r\nFecha de llamada",
y= "\r\nNúmero de llamdas recibidas por mes")
library(dplyr)
library(tidyverse)
library(plotly)
library(ggplot2)
library(gganimate)
library(gifski)
library(RColorBrewer)
library(gapminder)
library(xlsx)
library(data.table)
library(readxl)
library(readr)
library(trelliscopejs)
library(forecast)
library(lubridate)
# denuncias_victimas_pgj_h<-denuncias_victimas_pgj %>%
#   filter(estado_usuaria=="CIUDAD DE MÉXICO", municipio_usuaria=="GUSTAVO A. MADERO") %>%
#   group_by(fecha_alta, municipio_usuaria) %>%
#   count(municipio_usuaria, sort = TRUE) %>%
#   mutate(llamadasGAM=n)
#
########Pasando dataframe original a copia
denuncias_victimas_pgj_h<-denuncias_victimas_pgj
####Importar base de datos csv
library(readr)
file.choose()#buscar ruta del archivo csv
ruta_csv <-"C:\\Users\\Miroslava\\Downloads\\denuncias-victimas-pgj.csv"
denuncias_victimas_pgj<-read_csv(ruta_csv)
# denuncias_victimas_pgj_h<-denuncias_victimas_pgj %>%
#   filter(estado_usuaria=="CIUDAD DE MÉXICO", municipio_usuaria=="GUSTAVO A. MADERO") %>%
#   group_by(fecha_alta, municipio_usuaria) %>%
#   count(municipio_usuaria, sort = TRUE) %>%
#   mutate(llamadasGAM=n)
#
########Pasando dataframe original a copia
denuncias_victimas_pgj_h<-denuncias_victimas_pgj
######### Vizualizando formato de fecha
names(denuncias_victimas_pgj_h)
attach(denuncias_victimas_pgj_h)
str(fechahecho)
str(ao)
as.Date(fechahecho,origin="1964-02-29")
attach(denuncias_victimas_pgj_h)
str(fechahecho)
######### Corrigiendo fecha posixct a solo fecha
denuncias_victimas_pgj_h$fechahecho<-as.Date(denuncias_victimas_pgj_h$fechahecho,origin="1964-02-29" )
denuncias_victimas_pgj_h
######## contar nas
sum(is.na(denuncias_victimas_pgj_hf$fechahecho))
denuncias_victimas_pgj_hf<-denuncias_victimas_pgj_h
######## contar nas
sum(is.na(denuncias_victimas_pgj_hf$fechahecho))
sum(is.na(denuncias_victimas_pgj_hf$calidadjuridica))
sum(complete.cases(denuncias_victimas_pgj_h$fechahecho))
########## quitar nAS de la fecha solamente
# denuncias_victimas_pgj_hf<-denuncias_victimas_pgj_h[!is.na(denuncias_victimas_pgj_h$fechahecho)]
# denuncias_victimas_pgj_hf<-drop_na(denuncias_victimas_pgj_h$fechahecho)
denuncias_victimas_pgj_hf<-denuncias_victimas_pgj_h[complete.cases(denuncias_victimas_pgj_h$fechahecho),]
denuncias_victimas_pgj_hf
######## contar nas
sum(is.na(denuncias_victimas_pgj_hf$fechahecho))
#Filtro de año
#Comentario q sirve por si quiero Modificar fecha ,fechahecho>="2019-08-01", fechahecho<="2019-08-31"
denuncias_dia<-denuncias_victimas_pgj_hf %>%
filter(delito=="VIOLENCIA FAMILIAR", ao>="2019") %>%
group_by(fechahecho) %>%
count(fechahecho, sort = TRUE) %>%
arrange(fechahecho) %>%
mutate(denuncias_violenciafamiliar=n)
denuncias_dia
library(forecast)
############## SERIE TEMPORAL
Y<-ts(denuncias_dia$n, start=c(2019,01,01), frequency =365)
Y
autoplot(Y)
ajuste<-auto.arima(y=denuncias_dia$n)
summary(ajuste)
predicciones<-forecast(ajuste)
predicciones
p_predict<-autoplot(predicciones)
p_predict #La banda azul es el error, se da un valor en intervalo.
############## EXPLORACIÓN DE LOS DATOS
autoplot(Y)+
labs(title="No. de denuncias de violencia familiar diarias \r\n 2019
",
x="\r\nFecha de denuncia",
y= "\r\nNúmero de denuncias hechas por día")
descom= decompose(Y)
